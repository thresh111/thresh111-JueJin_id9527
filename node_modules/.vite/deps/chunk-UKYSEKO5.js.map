{
  "version": 3,
  "sources": ["../../../packages/components/container/src/container.vue", "../../../packages/components/container/src/aside.vue", "../../../packages/components/container/src/footer.vue", "../../../packages/components/container/src/header.vue", "../../../packages/components/container/src/main.vue", "../../../packages/components/container/index.ts"],
  "sourcesContent": ["<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElContainer',\n})\nconst props = defineProps({\n  /**\n   * @description layout direction for child elements\n   */\n  direction: {\n    type: String,\n  },\n})\nconst slots = useSlots()\n\nconst ns = useNamespace('container')\n\nconst isVertical = computed(() => {\n  if (props.direction === 'vertical') {\n    return true\n  } else if (props.direction === 'horizontal') {\n    return false\n  }\n  if (slots && slots.default) {\n    const vNodes: VNode[] = slots.default()\n    return vNodes.some((vNode) => {\n      const tag = (vNode.type as Component).name\n      return tag === 'ElHeader' || tag === 'ElFooter'\n    })\n  } else {\n    return false\n  }\n})\n</script>\n", "<template>\n  <aside :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </aside>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElAside',\n})\nconst props = defineProps({\n  /**\n   * @description width of the side section\n   */\n  width: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('aside')\nconst style = computed(\n  () =>\n    (props.width ? ns.cssVarBlock({ width: props.width }) : {}) as CSSProperties\n)\n</script>\n", "<template>\n  <footer :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </footer>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElFooter',\n})\nconst props = defineProps({\n  /**\n   * @description height of the footer\n   */\n  height: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('footer')\n\nconst style = computed(\n  () =>\n    (props.height\n      ? ns.cssVarBlock({ height: props.height })\n      : {}) as CSSProperties\n)\n</script>\n", "<template>\n  <header :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </header>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElHeader',\n})\n\nconst props = defineProps({\n  /**\n   * @description height of the header\n   */\n  height: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('header')\nconst style = computed(() => {\n  return props.height\n    ? (ns.cssVarBlock({\n        height: props.height,\n      }) as CSSProperties)\n    : {}\n})\n</script>\n", "<template>\n  <main :class=\"ns.b()\">\n    <slot />\n  </main>\n</template>\n<script lang=\"ts\" setup>\nimport { useNamespace } from '@element-plus/hooks'\n\ndefineOptions({\n  name: 'ElMain',\n})\n\nconst ns = useNamespace('main')\n</script>\n", "import { withInstall, withNoopInstall } from '@element-plus/utils'\n\nimport Container from './src/container.vue'\nimport Aside from './src/aside.vue'\nimport Footer from './src/footer.vue'\nimport Header from './src/header.vue'\nimport Main from './src/main.vue'\n\nexport const ElContainer = withInstall(Container, {\n  Aside,\n  Footer,\n  Header,\n  Main,\n})\n\nexport default ElContainer\nexport const ElAside = withNoopInstall(Aside)\nexport const ElFooter = withNoopInstall(Footer)\nexport const ElHeader = withNoopInstall(Header)\nexport const ElMain = withNoopInstall(Main)\n\nexport type ContainerInstance = InstanceType<typeof Container>\nexport type AsideInstance = InstanceType<typeof Aside>\nexport type FooterInstance = InstanceType<typeof Footer>\nexport type HeaderInstance = InstanceType<typeof Header>\nexport type MainInstance = InstanceType<typeof Main>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;kCAWc;EACZ,MAAM;AACR,CAAA;;;;;;;;;;AASA,UAAM,QAAQ,SAAS;AAEjB,UAAA,KAAK,aAAa,WAAW;AAE7B,UAAA,aAAa,SAAS,MAAM;AAC5B,UAAA,MAAM,cAAc,YAAY;AAC3B,eAAA;MAAA,WACE,MAAM,cAAc,cAAc;AACpC,eAAA;MAAA;AAEL,UAAA,SAAS,MAAM,SAAS;AACpB,cAAA,SAAkB,MAAM,QAAQ;AAC/B,eAAA,OAAO,KAAK,CAAC,UAAU;AACtB,gBAAA,MAAO,MAAM,KAAmB;AAC/B,iBAAA,QAAQ,cAAc,QAAQ;QAAA,CACtC;MAAA,OACI;AACE,eAAA;MAAA;IACT,CACD;;;;;;;;;;;;;mCC9Ba;EACZ,MAAM;AACR,CAAA;;;;;;;;;;;AAWM,UAAA,KAAK,aAAa,OAAO;AAC/B,UAAM,QAAQ,SACZ,MACG,MAAM,QAAQ,GAAG,YAAY,EAAE,OAAO,MAAM,MAAA,CAAO,IAAI,CAAA,CAC5D;;;;;;;;;;;;;;mCCjBc;EACZ,MAAM;AACR,CAAA;;;;;;;;;;;AAWM,UAAA,KAAK,aAAa,QAAQ;AAEhC,UAAM,QAAQ,SACZ,MACG,MAAM,SACH,GAAG,YAAY,EAAE,QAAQ,MAAM,OAAA,CAAQ,IACvC,CAAA,CACR;;;;;;;;;;;;;;mCCpBc;EACZ,MAAM;AACR,CAAA;;;;;;;;;;;AAYM,UAAA,KAAK,aAAa,QAAQ;AAC1B,UAAA,QAAQ,SAAS,MAAM;AACpB,aAAA,MAAM,SACR,GAAG,YAAY;QACd,QAAQ,MAAM;MAAA,CACf,IACD,CAAA;IAAC,CACN;;;;;;;;;;;;;;mCCxBa;EACZ,MAAM;AACR,CAAA;;;;AAEM,UAAA,KAAK,aAAa,MAAM;;;;;;;;;;;;;ACNlB,IAAC,cAAc,YAAY,WAAW;EAChD;EACA;EACA;EACA;AACF,CAAC;AAEW,IAAC,UAAU,gBAAgB,KAAK;AAChC,IAAC,WAAW,gBAAgB,MAAM;AAClC,IAAC,WAAW,gBAAgB,MAAM;AAClC,IAAC,SAAS,gBAAgB,IAAI;",
  "names": []
}
